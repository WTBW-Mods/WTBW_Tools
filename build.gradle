buildscript {
    repositories {
        jcenter()
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.1.0'
        classpath 'com.wynprice.cursemaven:CurseMaven:1.2.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'maven'
apply plugin: 'com.wynprice.cursemaven'

apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/master/generic/markdown-git-changelog.gradle'

def ENV = System.getenv()
version = ENV.BUILD_NUMBER ? "${project_version}.${ENV.BUILD_NUMBER}" : "${project_version}.custom"
group = 'com.wtbw.mods'
archivesBaseName = "wtbw_tools-${minecraft_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: "${forge_mappings}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
//            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                wtbw_tools {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            mods {
                wtbw_tools {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            args '--mod', 'wtbw_tools', '--all', '--output', file('src/generated/resources/')
            mods {
                wtbw_tools {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenLocal()
    maven { url "https://maven.latmod.com/" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    if (findProject(':Mod_WTBW_Lib') != null) {
        compile project(':Mod_WTBW_Lib')
    }
    else if (findProject(':wtbw_lib') != null){
        compile project(":wtbw_lib")
    }
    else {
        compile fg.deobf (project.dependencies.create("com.wtbw.mods:wtbw_lib-1.15.2:${wtbwlib_version}") {
            transitive = false
        })
    }

    if (findProject(':Mod_WTBW_Core') != null) {
        compile project(':Mod_WTBW_Core')
    }
    else if (findProject(':wtbw_core') != null){
        compile project(":wtbw_core")
    }
    else {
        compile fg.deobf (project.dependencies.create("com.wtbw.mods:wtbw_core-1.15.2:${wtbwcore_version}") {
            transitive = false
        })
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title": "WTBW Tools",
                "Specification-Vendor": "wtbw",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"wtbw",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier 'deobf'
}

build.dependsOn deobfJar

artifacts {
    archives deobfJar
}

if (ENV.LOCAL_MAVEN) {
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "file://${ENV.LOCAL_MAVEN}")
            }
        }
    }
}

if (ENV.WTBW_CF_KEY) {
    curseforge {
        apiKey = ENV.WTBW_CF_KEY
        project {
            id = "357092"
            releaseType = "${release_type}"
            addGameVersion "${minecraft_version}"
            relations {
                requiredDependency 'wtbw_lib'
                requiredDependency 'wtbw_core'
            }
            changelog = getGitChangelog
            changelogType = 'markdown'
            addArtifact(deobfJar)
        }
    }
}